<?xml version="1.0"?>
<!--

Flickr Uploadr

Copyright (c) 2007 Yahoo! Inc.  All rights reserved.  This library is free
software; you can redistribute it and/or modify it under the terms of the
GNU General Public License (GPL), version 2 only.  This library is
distributed WITHOUT ANY WARRANTY, whether express or implied. See the GNU
GPL for more details (http://www.gnu.org/licenses/gpl.html)

-->
<window xmlns="http://www.mozilla.org/keymaster/gatekeeper/there.is.only.xul"
id="dock" title="" width="0" height="0">
	<script src="chrome://global/content/nsUserSettings.js" />
	<script><![CDATA[
		window.addEventListener('load', function() {

			// This is a hacked handler for drags that happen after the app was opened
			//   It prevents clobbering photos by strict ordering in the event queue, but
			//   it enables upload too early and therefore can cause problems

			if (window.arguments && window.arguments[0]){
				const Cc = Components.classes;
				const Ci = Components.interfaces;

				// Get the main window
				var singleton = nsPreferences.copyUnicharPref('toolkit.singletonWindowType');
				var windowMediator = Cc['@mozilla.org/appshell/window-mediator;1'].getService(
					Ci.nsIWindowMediator);
				var win = windowMediator.getMostRecentWindow(singleton);

				// Add this photo, converting file:// URL to a native path
				if (win) {
					win._threads.worker.dispatch(new win.PhotoAdd(
						Cc['@mozilla.org/network/protocol;1?name=file'].getService(
						Ci.nsIFileProtocolHandler).getFileFromURLSpec(window.arguments[0]).path),
						win._threads.worker.DISPATCH_NORMAL);
					if (win._photos.sort) {
						win._threads.worker.dispatch(new win.Sort(),
							win._threads.worker.DISPATCH_NORMAL);
					} else {
						win._threads.worker.dispatch(new win.EnableUpload(),
							win._threads.worker.DISPATCH_NORMAL);
					}
					window.close();
					win.focus();
				}

			}
		}, false);
	]]></script>
</window>